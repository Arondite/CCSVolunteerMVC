@model CCSVolunteerMVC.ViewModels.VolunteerViewModel
@using CCSVolunteerMVC.Models;
@{
	ViewBag.Title = "Test Index";
	///This screen will display a list of volunteers that match the given pin
	///There is a select option that the user will push to select their information
	var password = Request["Password"];
	List<Volunteer> volunteerCollection = Model.Volunteer.Where(v => v.volPin == password).ToList();
	List<Ethnicity> EthnicityCollection = Model.Ethnicity.ToList();
	List<BooleanTitleMatch> isActive = Model.IsActive.ToList();
	List<BooleanTitleMatch> isClient = Model.IsClient.ToList();
	List<BooleanTitleMatch> courtOrdered = Model.CourtOrdered.ToList();
	var id = volunteerCollection.Select(v => v.volunteerID);
	List<Volunteer> tempCollection = new List<Volunteer>();
	foreach (var item in id)
	{
		if (CurrentUsers.Users.Where(v => v.UserId == item).Any())
		{
			tempCollection.Add(Model.Volunteer.Where(v => v.volunteerID == item).Single());
		}
	}
	if (App.TimeInTimeOut == "Out")
	{
		volunteerCollection = tempCollection;
	}
}

<h2 class="jumbotron text-center">Volunteers</h2>
<table class="table">
	<tr>
		<th>
			@*@Html.DisplayNameFor(model => model.volLastName)*@
			@Html.DisplayNameFor(model => model.Volunteer.ElementAt(0).volFirstName)
		</th>
		<th>
			@Html.DisplayNameFor(model => model.Volunteer.ElementAt(0).volLastName)
			@*@Html.DisplayNameFor(model => model.volLastName)*@
		</th>
		@*<th>
			@Html.DisplayNameFor(model => model.Volunteer.ElementAt(0).volDOB)
			@Html.DisplayNameFor(model => model.volDOB)
		</th>
		<th>
			@Html.DisplayNameFor(model => model.Volunteer.ElementAt(0).volPin)
			@Html.DisplayNameFor(model => model.volPin)
		</th>
		<th>
			@Html.DisplayNameFor(model => model.Volunteer.ElementAt(0).volGender)
			@Html.DisplayNameFor(model => model.volGender)
		</th>
		<th>
			@Html.DisplayNameFor(model => model.Volunteer.ElementAt(0).volJoinDate)
			@Html.DisplayNameFor(model => model.volJoinDate)
		</th>
		<th>
			@Html.DisplayNameFor(model => model.Volunteer.ElementAt(0).volsCourtOrdered)
			@Html.DisplayNameFor(model => model.volsCourtOrdered)
		</th>
		<th>
			@Html.DisplayNameFor(model => model.Volunteer.ElementAt(0).ethnicityID)
			@Html.DisplayNameFor(model => model.ethnicityID)
		</th>
		<th>
			@Html.DisplayNameFor(model => model.Volunteer.ElementAt(0).volsClient)
			@Html.DisplayNameFor(model => model.volsClient)
		</th>
		<th>
			@Html.DisplayNameFor(model => model.Volunteer.ElementAt(0).volsActive)
			@Html.DisplayNameFor(model => model.volsActive)
		</th>*@
		<th></th>
	</tr>

	@for (int i = 0; i < volunteerCollection.Count; i++)
	{
		<tr>
			<td>
				@Html.DisplayFor(modelItem => volunteerCollection.ElementAt(i).volFirstName)
			</td>
			<td>
				@Html.DisplayFor(modelItem => volunteerCollection.ElementAt(i).volLastName)
			</td>
			@*<td>
				@Html.DisplayFor(modelItem => volunteerCollection.ElementAt(i).volDOB)
			</td>
			<td>
				@Html.DisplayFor(modelItem => volunteerCollection.ElementAt(i).volPin)
			</td>
			<td>
				@Html.DisplayFor(modelItem => volunteerCollection.ElementAt(i).volGender)
			</td>
			<td>
				@Html.DisplayFor(modelItem => volunteerCollection.ElementAt(i).volJoinDate)
			</td>
			<td>
				@Html.DisplayFor(modelItem => volunteerCollection.ElementAt(i).volsCourtOrdered)
				@Html.DisplayFor(modelItem => courtOrdered.ElementAt(i).Value)
			</td>
			<td>
				@Html.DisplayFor(modelItem => item.ethnicityID)
				@Html.DisplayFor(modelItem => EthnicityCollection.ElementAt(i).ethName)
			</td>
			<td>
				@Html.DisplayFor(modelItem => volunteerCollection.ElementAt(i).volsClient)
				@Html.DisplayFor(modelItem => isClient.ElementAt(i).Value)
			</td>
			<td>
				@Html.DisplayFor(modelItem => volunteerCollection.ElementAt(i).volsActive)
				@Html.DisplayFor(modelItem => isActive.ElementAt(i).Value)
			</td>*@
			<td>
				@*@Html.ActionLink("Edit", "Edit", new { id = volunteerCollection.ElementAt(i).volunteerID }) |
				@Html.ActionLink("Details", "Details", new { id = volunteerCollection.ElementAt(i).volunteerID }) |
				@Html.ActionLink("Delete", "Delete", new { id = volunteerCollection.ElementAt(i).volunteerID })*@
				<button  class="btn btn-block btn-primary" onclick="location.href='@Url.Action("VolunteerDetails", "Kiosk", new { id = volunteerCollection.ElementAt(i).volunteerID })'" >Select</button>
			</td>
		</tr>
	}

</table>